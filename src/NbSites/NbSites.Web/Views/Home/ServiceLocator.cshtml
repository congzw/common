@using Microsoft.Extensions.DependencyInjection
@using Common
@inject IServiceProvider InjectedProvider
@inject IServiceLocator InjectedLocator
@{
    var providerInjected = InjectedProvider;
    var providerFromInjected = InjectedProvider.GetService<IServiceProvider>();
    var providerFromServiceLocatorCurrent = ServiceLocator.Current;
    var providerFromServiceLocatorCurrentResolve = ServiceLocator.Current.GetService<IServiceProvider>();

    var locatorInjected = InjectedLocator;
    var locatorFromServiceLocatorCurrent = ServiceLocator.Current.GetService<IServiceLocator>();
    var locatorFromServiceLocatorCurrentResolve = InjectedLocator.GetServiceProvider().GetService<IServiceLocator>();
}

<h2>provider</h2>
<p>
    providerInjected : @providerInjected.GetHashCode()
</p>
<p>
    providerFromInjected : @providerFromInjected.GetHashCode()
</p>
<p>
    providerFromServiceLocatorCurrent : @providerFromServiceLocatorCurrent.GetHashCode()
</p>
<p>
    providerFromServiceLocatorCurrentResolve : @providerFromServiceLocatorCurrentResolve.GetHashCode()
</p>
<hr />
<h2>locator</h2>
<p>
    locatorInjected: @locatorInjected.GetHashCode()
</p>
<p>
    locatorFromServiceLocatorCurrent: @locatorFromServiceLocatorCurrent.GetHashCode()
</p>
<p>
    locatorFromServiceLocatorCurrentResolve: @locatorFromServiceLocatorCurrentResolve.GetHashCode()
</p>